"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[90110],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var s=r(96540);const i={},l=s.createContext(i);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},32904:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"learning/programming/rust/rust-overview","title":"Introduction to Rust Programming","description":"Welcome to Rust - the systems programming language that\'s revolutionizing how we think about memory safety, performance, and concurrency! Rust empowers you to build fast, safe, and concurrent systems without the traditional trade-offs.","source":"@site/docs/learning/programming/rust/rust-overview.mdx","sourceDirName":"learning/programming/rust","slug":"/learning/programming/rust/rust-overview","permalink":"/docs/learning/programming/rust/rust-overview","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Introduction to Rust Programming","sidebar_label":"Rust"},"sidebar":"learning","previous":{"title":"Python","permalink":"/docs/learning/programming/python/python-overview"},"next":{"title":"Web Development","permalink":"/docs/learning/web-dev"}}');var i=r(74848),l=r(28453);const t={title:"Introduction to Rust Programming",sidebar_label:"Rust"},o="Introduction to Rust Programming \ud83e\udd80",a={},c=[{value:"What is Rust? \ud83e\udd14",id:"what-is-rust-",level:2},{value:"Why Learn Rust? \ud83d\ude80",id:"why-learn-rust-",level:3},{value:"Key Features of Rust \ud83c\udf1f",id:"key-features-of-rust-",level:2},{value:"1. <strong>Memory Safety</strong> \ud83d\udee1\ufe0f",id:"1-memory-safety-\ufe0f",level:3},{value:"2. <strong>Zero-Cost Abstractions</strong> \u26a1",id:"2-zero-cost-abstractions-",level:3},{value:"3. <strong>Ownership System</strong> \ud83c\udfd7\ufe0f",id:"3-ownership-system-\ufe0f",level:3},{value:"4. <strong>Fearless Concurrency</strong> \ud83d\udd04",id:"4-fearless-concurrency-",level:3},{value:"Rust Syntax Basics \ud83d\udcdd",id:"rust-syntax-basics-",level:2},{value:"Hello World Example",id:"hello-world-example",level:3},{value:"Variables and Data Types",id:"variables-and-data-types",level:3},{value:"Control Flow",id:"control-flow",level:3},{value:"Ownership and Borrowing \ud83c\udfd7\ufe0f",id:"ownership-and-borrowing-\ufe0f",level:2},{value:"Ownership Rules",id:"ownership-rules",level:3},{value:"Borrowing and References",id:"borrowing-and-references",level:3},{value:"Structs and Enums \ud83c\udfd7\ufe0f",id:"structs-and-enums-\ufe0f",level:2},{value:"Structs",id:"structs",level:3},{value:"Enums and Pattern Matching",id:"enums-and-pattern-matching",level:3},{value:"Error Handling \ud83d\udea8",id:"error-handling-",level:2},{value:"Result Type",id:"result-type",level:3},{value:"Concurrency \ud83d\udd04",id:"concurrency-",level:2},{value:"Threads",id:"threads",level:3},{value:"Channels",id:"channels",level:3},{value:"Career Opportunities \ud83d\udcbc",id:"career-opportunities-",level:2},{value:"Job Roles \ud83c\udfaf",id:"job-roles-",level:3},{value:"Industries Using Rust \ud83c\udfe2",id:"industries-using-rust-",level:3},{value:"Learning Path \ud83d\uddfa\ufe0f",id:"learning-path-\ufe0f",level:2},{value:"Beginner Level (Weeks 1-4) \ud83d\udcda",id:"beginner-level-weeks-1-4-",level:3},{value:"Intermediate Level (Weeks 5-8) \ud83d\udd27",id:"intermediate-level-weeks-5-8-",level:3},{value:"Advanced Level (Weeks 9-12) \ud83d\ude80",id:"advanced-level-weeks-9-12-",level:3},{value:"Hands-On Projects \ud83d\udee0\ufe0f",id:"hands-on-projects-\ufe0f",level:2},{value:"Project 1: Command-Line Calculator",id:"project-1-command-line-calculator",level:3},{value:"Project 2: File Processor",id:"project-2-file-processor",level:3},{value:"Project 3: Web Server",id:"project-3-web-server",level:3},{value:"Project 4: Blockchain Implementation",id:"project-4-blockchain-implementation",level:3},{value:"Popular Rust Frameworks \ud83e\uddf0",id:"popular-rust-frameworks-",level:2},{value:"Web Frameworks \ud83c\udf10",id:"web-frameworks-",level:3},{value:"Async Runtime",id:"async-runtime",level:3},{value:"Other Useful Crates",id:"other-useful-crates",level:3},{value:"Development Tools \ud83d\udd28",id:"development-tools-",level:2},{value:"IDEs and Editors",id:"ides-and-editors",level:3},{value:"Build and Package Manager",id:"build-and-package-manager",level:3},{value:"Best Practices \ud83d\udccb",id:"best-practices-",level:2},{value:"Code Style",id:"code-style",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Getting Started Today! \ud83c\udfaf",id:"getting-started-today-",level:2},{value:"Step 1: Install Rust",id:"step-1-install-rust",level:3},{value:"Step 2: Create Your First Project",id:"step-2-create-your-first-project",level:3},{value:"Step 3: Learn the Fundamentals",id:"step-3-learn-the-fundamentals",level:3},{value:"Resources to Continue Learning \ud83d\udcd6",id:"resources-to-continue-learning-",level:2},{value:"Official Resources",id:"official-resources",level:3},{value:"Online Courses",id:"online-courses",level:3},{value:"Books",id:"books",level:3},{value:"Communities",id:"communities",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction-to-rust-programming-",children:"Introduction to Rust Programming \ud83e\udd80"})}),"\n",(0,i.jsx)(n.p,{children:"Welcome to Rust - the systems programming language that's revolutionizing how we think about memory safety, performance, and concurrency! Rust empowers you to build fast, safe, and concurrent systems without the traditional trade-offs."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-rust-",children:"What is Rust? \ud83e\udd14"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Rust"})," is a systems programming language developed by Mozilla that focuses on safety, speed, and concurrency. It achieves memory safety without garbage collection, making it ideal for system-level programming, web backends, and performance-critical applications."]}),"\n",(0,i.jsx)(n.h3,{id:"why-learn-rust-",children:"Why Learn Rust? \ud83d\ude80"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n    A[Why Learn Rust?] --\x3e B[Memory Safety]\n    A --\x3e C[Zero-Cost Abstractions]\n    A --\x3e D[Fearless Concurrency]\n    A --\x3e E[Growing Ecosystem]\n    A --\x3e F[High-Paying Jobs]\n    A --\x3e G[Future-Proof Technology]\n    \n    B --\x3e B1[No Null Pointer Errors]\n    B --\x3e B2[No Buffer Overflows]\n    C --\x3e C1[C/C++ Performance]\n    C --\x3e C2[High-Level Features]\n    D --\x3e D1[Thread Safety]\n    D --\x3e D2[Data Race Prevention]\n    E --\x3e E1[Web Development]\n    E --\x3e E2[Blockchain & Crypto]\n    F --\x3e F1[$120k+ Average Salary]\n    F --\x3e F2[Remote Opportunities]"}),"\n",(0,i.jsx)(n.h2,{id:"key-features-of-rust-",children:"Key Features of Rust \ud83c\udf1f"}),"\n",(0,i.jsxs)(n.h3,{id:"1-memory-safety-\ufe0f",children:["1. ",(0,i.jsx)(n.strong,{children:"Memory Safety"})," \ud83d\udee1\ufe0f"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prevents common programming errors at compile time"}),"\n",(0,i.jsx)(n.li,{children:"No null pointer dereferences"}),"\n",(0,i.jsx)(n.li,{children:"No buffer overflows"}),"\n",(0,i.jsx)(n.li,{children:"No use-after-free errors"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-zero-cost-abstractions-",children:["2. ",(0,i.jsx)(n.strong,{children:"Zero-Cost Abstractions"})," \u26a1"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High-level features with no runtime overhead"}),"\n",(0,i.jsx)(n.li,{children:"Performance comparable to C and C++"}),"\n",(0,i.jsx)(n.li,{children:"Compile-time optimizations"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-ownership-system-\ufe0f",children:["3. ",(0,i.jsx)(n.strong,{children:"Ownership System"})," \ud83c\udfd7\ufe0f"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Unique approach to memory management"}),"\n",(0,i.jsx)(n.li,{children:"No garbage collection needed"}),"\n",(0,i.jsx)(n.li,{children:"Compile-time memory safety guarantees"}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-fearless-concurrency-",children:["4. ",(0,i.jsx)(n.strong,{children:"Fearless Concurrency"})," \ud83d\udd04"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Safe concurrent programming by default"}),"\n",(0,i.jsx)(n.li,{children:"Prevents data races at compile time"}),"\n",(0,i.jsx)(n.li,{children:"Excellent threading primitives"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"rust-syntax-basics-",children:"Rust Syntax Basics \ud83d\udcdd"}),"\n",(0,i.jsx)(n.h3,{id:"hello-world-example",children:"Hello World Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    println!("Hello, World!");\n    println!("Welcome to Rust programming!");\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"variables-and-data-types",children:"Variables and Data Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    // Immutable variables (default)\n    let name = "Alice";\n    let age = 30;\n    \n    // Mutable variables\n    let mut counter = 0;\n    counter += 1;\n    \n    // Explicit type annotations\n    let x: i32 = 42;\n    let y: f64 = 3.14159;\n    let is_rust_awesome: bool = true;\n    \n    // Strings\n    let greeting = String::from("Hello");\n    let language = "Rust"; // string slice (&str)\n    \n    // Arrays and vectors\n    let numbers = [1, 2, 3, 4, 5];\n    let mut vec_numbers = vec![1, 2, 3, 4, 5];\n    vec_numbers.push(6);\n    \n    println!("Name: {}, Age: {}", name, age);\n    println!("Numbers: {:?}", numbers);\n    println!("Vector: {:?}", vec_numbers);\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"control-flow",children:"Control Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let number = 7;\n    \n    // If-else expressions\n    let result = if number > 5 {\n        "greater than 5"\n    } else {\n        "5 or less"\n    };\n    println!("Number is {}", result);\n    \n    // Match expression (pattern matching)\n    match number {\n        1 => println!("One"),\n        2 | 3 => println!("Two or Three"),\n        4..=6 => println!("Four to Six"),\n        _ => println!("Something else"),\n    }\n    \n    // Loops\n    for i in 0..5 {\n        println!("Loop iteration: {}", i);\n    }\n    \n    let mut count = 0;\n    loop {\n        count += 1;\n        if count == 3 {\n            break;\n        }\n        println!("Count: {}", count);\n    }\n    \n    // While loop\n    let mut number = 3;\n    while number != 0 {\n        println!("{}!", number);\n        number -= 1;\n    }\n    println!("LIFTOFF!!!");\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"ownership-and-borrowing-\ufe0f",children:"Ownership and Borrowing \ud83c\udfd7\ufe0f"}),"\n",(0,i.jsx)(n.h3,{id:"ownership-rules",children:"Ownership Rules"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    // Ownership moves\n    let s1 = String::from("hello");\n    let s2 = s1; // s1 is moved to s2, s1 is no longer valid\n    \n    // This would cause a compile error:\n    // println!("{}", s1);\n    \n    println!("{}", s2); // This works\n    \n    // Cloning for independent copies\n    let s3 = String::from("world");\n    let s4 = s3.clone();\n    println!("s3: {}, s4: {}", s3, s4); // Both work\n}\n\n// Functions and ownership\nfn takes_ownership(some_string: String) {\n    println!("{}", some_string);\n} // some_string goes out of scope and is dropped\n\nfn makes_copy(some_integer: i32) {\n    println!("{}", some_integer);\n} // some_integer goes out of scope, but i32 is Copy, so nothing special happens\n\nfn main() {\n    let s = String::from("hello");\n    takes_ownership(s); // s\'s value moves into the function\n    // s is no longer valid here\n    \n    let x = 5;\n    makes_copy(x); // x would move into the function,\n    // but i32 is Copy, so it\'s okay to still use x afterward\n    \n    println!("x is still valid: {}", x);\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"borrowing-and-references",children:"Borrowing and References"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let s1 = String::from("hello");\n    \n    // Borrowing (immutable reference)\n    let len = calculate_length(&s1);\n    println!("The length of \'{}\' is {}.", s1, len);\n    \n    // Mutable borrowing\n    let mut s2 = String::from("hello");\n    change(&mut s2);\n    println!("Changed string: {}", s2);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n} // s goes out of scope, but because it\'s a reference, nothing is dropped\n\nfn change(some_string: &mut String) {\n    some_string.push_str(", world");\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"structs-and-enums-\ufe0f",children:"Structs and Enums \ud83c\udfd7\ufe0f"}),"\n",(0,i.jsx)(n.h3,{id:"structs",children:"Structs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'#[derive(Debug)]\nstruct Person {\n    name: String,\n    age: u32,\n    email: String,\n}\n\nimpl Person {\n    // Associated function (constructor)\n    fn new(name: String, age: u32, email: String) -> Person {\n        Person { name, age, email }\n    }\n    \n    // Method\n    fn greet(&self) {\n        println!("Hello, my name is {} and I\'m {} years old.", self.name, self.age);\n    }\n    \n    // Mutable method\n    fn have_birthday(&mut self) {\n        self.age += 1;\n        println!("Happy birthday! {} is now {} years old.", self.name, self.age);\n    }\n}\n\nfn main() {\n    let mut person = Person::new(\n        String::from("Alice"),\n        30,\n        String::from("alice@example.com")\n    );\n    \n    person.greet();\n    person.have_birthday();\n    \n    println!("Person: {:#?}", person);\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"enums-and-pattern-matching",children:"Enums and Pattern Matching"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'#[derive(Debug)]\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nimpl Message {\n    fn process(&self) {\n        match self {\n            Message::Quit => println!("Quit message received"),\n            Message::Move { x, y } => println!("Move to coordinates ({}, {})", x, y),\n            Message::Write(text) => println!("Text message: {}", text),\n            Message::ChangeColor(r, g, b) => {\n                println!("Change color to RGB({}, {}, {})", r, g, b)\n            }\n        }\n    }\n}\n\n// Option enum (built-in)\nfn divide(x: f64, y: f64) -> Option<f64> {\n    if y != 0.0 {\n        Some(x / y)\n    } else {\n        None\n    }\n}\n\nfn main() {\n    let msg = Message::Write(String::from("Hello, Rust!"));\n    msg.process();\n    \n    let move_msg = Message::Move { x: 10, y: 20 };\n    move_msg.process();\n    \n    // Working with Option\n    match divide(10.0, 2.0) {\n        Some(result) => println!("Result: {}", result),\n        None => println!("Cannot divide by zero"),\n    }\n    \n    // Using if let for simpler pattern matching\n    let some_number = Some(42);\n    if let Some(value) = some_number {\n        println!("Got a value: {}", value);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling-",children:"Error Handling \ud83d\udea8"}),"\n",(0,i.jsx)(n.h3,{id:"result-type",children:"Result Type"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use std::fs::File;\nuse std::io::{self, Read};\n\nfn read_file_contents(filename: &str) -> Result<String, io::Error> {\n    let mut file = File::open(filename)?; // ? operator for error propagation\n    let mut contents = String::new();\n    file.read_to_string(&mut contents)?;\n    Ok(contents)\n}\n\nfn main() {\n    match read_file_contents("example.txt") {\n        Ok(contents) => println!("File contents: {}", contents),\n        Err(error) => println!("Error reading file: {}", error),\n    }\n    \n    // Alternative: unwrap_or_else\n    let contents = read_file_contents("example.txt")\n        .unwrap_or_else(|error| {\n            eprintln!("Failed to read file: {}", error);\n            String::from("Default content")\n        });\n    \n    println!("Contents: {}", contents);\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"concurrency-",children:"Concurrency \ud83d\udd04"}),"\n",(0,i.jsx)(n.h3,{id:"threads",children:"Threads"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let handle = thread::spawn(|| {\n        for i in 1..10 {\n            println!("Thread: {}", i);\n            thread::sleep(Duration::from_millis(1));\n        }\n    });\n    \n    for i in 1..5 {\n        println!("Main: {}", i);\n        thread::sleep(Duration::from_millis(1));\n    }\n    \n    handle.join().unwrap(); // Wait for thread to finish\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"channels",children:"Channels"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use std::sync::mpsc;\nuse std::thread;\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n    \n    thread::spawn(move || {\n        let messages = vec![\n            String::from("Hello"),\n            String::from("from"),\n            String::from("the"),\n            String::from("thread"),\n        ];\n        \n        for message in messages {\n            tx.send(message).unwrap();\n            thread::sleep(Duration::from_secs(1));\n        }\n    });\n    \n    for received in rx {\n        println!("Received: {}", received);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"career-opportunities-",children:"Career Opportunities \ud83d\udcbc"}),"\n",(0,i.jsx)(n.h3,{id:"job-roles-",children:"Job Roles \ud83c\udfaf"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust Developer"})," - $100,000 - $150,000/year"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Systems Engineer"})," - $110,000 - $160,000/year"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend Engineer (Rust)"})," - $105,000 - $155,000/year"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Blockchain Developer"})," - $120,000 - $180,000/year"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance Engineer"})," - $115,000 - $165,000/year"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"industries-using-rust-",children:"Industries Using Rust \ud83c\udfe2"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mozilla"})," - Firefox browser engine"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dropbox"})," - File storage systems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Discord"})," - Real-time communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Figma"})," - Design collaboration platform"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cloudflare"})," - Edge computing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microsoft"})," - Windows components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Facebook"})," - Infrastructure tools"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"learning-path-\ufe0f",children:"Learning Path \ud83d\uddfa\ufe0f"}),"\n",(0,i.jsx)(n.h3,{id:"beginner-level-weeks-1-4-",children:"Beginner Level (Weeks 1-4) \ud83d\udcda"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rust Fundamentals"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Installation and setup"}),"\n",(0,i.jsx)(n.li,{children:"Variables and data types"}),"\n",(0,i.jsx)(n.li,{children:"Control flow"}),"\n",(0,i.jsx)(n.li,{children:"Functions"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ownership System"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ownership rules"}),"\n",(0,i.jsx)(n.li,{children:"Borrowing and references"}),"\n",(0,i.jsx)(n.li,{children:"Slices"}),"\n",(0,i.jsx)(n.li,{children:"Memory management"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"intermediate-level-weeks-5-8-",children:"Intermediate Level (Weeks 5-8) \ud83d\udd27"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Data Structures"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Structs and methods"}),"\n",(0,i.jsx)(n.li,{children:"Enums and pattern matching"}),"\n",(0,i.jsx)(n.li,{children:"Collections (Vec, HashMap)"}),"\n",(0,i.jsx)(n.li,{children:"Traits and generics"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Result and Option types"}),"\n",(0,i.jsx)(n.li,{children:"Error propagation"}),"\n",(0,i.jsx)(n.li,{children:"Custom error types"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"advanced-level-weeks-9-12-",children:"Advanced Level (Weeks 9-12) \ud83d\ude80"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Advanced Concepts"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lifetimes"}),"\n",(0,i.jsx)(n.li,{children:"Closures and iterators"}),"\n",(0,i.jsx)(n.li,{children:"Smart pointers"}),"\n",(0,i.jsx)(n.li,{children:"Concurrency"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Real-World Development"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cargo and crates"}),"\n",(0,i.jsx)(n.li,{children:"Testing and documentation"}),"\n",(0,i.jsx)(n.li,{children:"Unsafe Rust"}),"\n",(0,i.jsx)(n.li,{children:"FFI (Foreign Function Interface)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"hands-on-projects-\ufe0f",children:"Hands-On Projects \ud83d\udee0\ufe0f"}),"\n",(0,i.jsx)(n.h3,{id:"project-1-command-line-calculator",children:"Project 1: Command-Line Calculator"}),"\n",(0,i.jsx)(n.p,{children:"Build a CLI calculator that handles mathematical expressions with error handling."}),"\n",(0,i.jsx)(n.h3,{id:"project-2-file-processor",children:"Project 2: File Processor"}),"\n",(0,i.jsx)(n.p,{children:"Create a multithreaded file processing tool that can handle large datasets safely."}),"\n",(0,i.jsx)(n.h3,{id:"project-3-web-server",children:"Project 3: Web Server"}),"\n",(0,i.jsx)(n.p,{children:"Develop a high-performance HTTP server using async Rust and popular frameworks."}),"\n",(0,i.jsx)(n.h3,{id:"project-4-blockchain-implementation",children:"Project 4: Blockchain Implementation"}),"\n",(0,i.jsx)(n.p,{children:"Build a simple blockchain to understand cryptography and distributed systems."}),"\n",(0,i.jsx)(n.h2,{id:"popular-rust-frameworks-",children:"Popular Rust Frameworks \ud83e\uddf0"}),"\n",(0,i.jsx)(n.h3,{id:"web-frameworks-",children:"Web Frameworks \ud83c\udf10"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Actix-web"})," - High-performance web framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rocket"})," - Type-safe web framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Warp"})," - Composable web server framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Axum"})," - Ergonomic async web framework"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"async-runtime",children:"Async Runtime"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tokio"})," - Asynchronous runtime"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"async-std"})," - Async standard library"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Smol"})," - Small async runtime"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"other-useful-crates",children:"Other Useful Crates"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Serde"})," - Serialization framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clap"})," - Command-line argument parser"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Diesel"})," - Safe, extensible ORM"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"development-tools-",children:"Development Tools \ud83d\udd28"}),"\n",(0,i.jsx)(n.h3,{id:"ides-and-editors",children:"IDEs and Editors"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VS Code"})," - With rust-analyzer extension"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IntelliJ IDEA"})," - With Rust plugin"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vim/Neovim"})," - With rust.vim"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Emacs"})," - With rust-mode"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"build-and-package-manager",children:"Build and Package Manager"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cargo"})," - Built-in build system and package manager"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"rustc"})," - The Rust compiler"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"rustfmt"})," - Code formatter"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"clippy"})," - Linter for common mistakes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices-",children:"Best Practices \ud83d\udccb"}),"\n",(0,i.jsx)(n.h3,{id:"code-style",children:"Code Style"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"cargo fmt"})," for consistent formatting"]}),"\n",(0,i.jsxs)(n.li,{children:["Enable ",(0,i.jsx)(n.code,{children:"clippy"})," for additional linting"]}),"\n",(0,i.jsx)(n.li,{children:"Write comprehensive tests"}),"\n",(0,i.jsx)(n.li,{children:"Document public APIs"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prefer borrowing over ownership transfer"}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Rc"})," and ",(0,i.jsx)(n.code,{children:"Arc"})," for shared ownership"]}),"\n",(0,i.jsx)(n.li,{children:"Leverage the type system for safety"}),"\n",(0,i.jsx)(n.li,{children:"Understand lifetime annotations"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"Result"})," for recoverable errors"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"panic!"})," only for unrecoverable errors"]}),"\n",(0,i.jsx)(n.li,{children:"Implement custom error types when needed"}),"\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.code,{children:"?"})," operator for error propagation"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started-today-",children:"Getting Started Today! \ud83c\udfaf"}),"\n",(0,i.jsx)(n.h3,{id:"step-1-install-rust",children:"Step 1: Install Rust"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource $HOME/.cargo/env\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-2-create-your-first-project",children:"Step 2: Create Your First Project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cargo new hello_rust\ncd hello_rust\ncargo run\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-3-learn-the-fundamentals",children:"Step 3: Learn the Fundamentals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complete the Rust Book (doc.rust-lang.org/book/)"}),"\n",(0,i.jsx)(n.li,{children:"Try Rustlings exercises"}),"\n",(0,i.jsx)(n.li,{children:"Practice with small projects"}),"\n",(0,i.jsx)(n.li,{children:"Join the Rust community"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resources-to-continue-learning-",children:"Resources to Continue Learning \ud83d\udcd6"}),"\n",(0,i.jsx)(n.h3,{id:"official-resources",children:"Official Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"The Rust Book"})," - doc.rust-lang.org/book/"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust by Example"})," - doc.rust-lang.org/rust-by-example/"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rustlings"})," - github.com/rust-lang/rustlings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust Playground"})," - play.rust-lang.org"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"online-courses",children:"Online Courses"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Udemy"})," - Complete Rust programming courses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Coursera"})," - Rust programming specialization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exercism"})," - Rust track with mentoring"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"books",children:"Books"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'"The Rust Programming Language" (The Rust Book)'}),"\n",(0,i.jsx)(n.li,{children:'"Programming Rust" by Jim Blandy'}),"\n",(0,i.jsx)(n.li,{children:'"Rust in Action" by Tim McNamara'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"communities",children:"Communities"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust Users Forum"})," - users.rust-lang.org"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reddit r/rust"})," - Rust community discussions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Discord"})," - Rust community server"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ready to Rust?"})," \ud83d\ude80"]}),"\n",(0,i.jsx)(n.p,{children:"Rust represents the future of systems programming - combining the performance of C/C++ with the safety of modern languages. Its unique ownership system, zero-cost abstractions, and growing ecosystem make it an excellent choice for performance-critical applications."}),"\n",(0,i.jsx)(n.p,{children:"Whether you're interested in web backends, game engines, blockchain development, or operating systems, Rust provides the tools and safety guarantees you need to build reliable, efficient software."}),"\n",(0,i.jsx)(n.p,{children:'The Rust community is known for being welcoming and helpful, with excellent documentation and learning resources. Start your Rust journey today and join the "Rustaceans" building the next generation of safe, fast systems!'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Happy coding!"})," \ud83e\udd80\u2728"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);